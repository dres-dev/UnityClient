<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Org.Vitrivr.DresApi</name>
    </assembly>
    <members>
        <member name="T:Org.Vitrivr.DresApi.Api.IClientRunInfoApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Client.IApiAccessor">
            <summary>
            Represents configuration aspects required to interact with the API endpoints.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.IApiAccessor.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.IApiAccessor.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.IApiAccessor.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IClientRunInfoApi.GetApiRuninfoCurrenttaskWithRunid(System.String,System.String)">
            <summary>
            Returns an overview of the currently active task for a run
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="runId"></param>
            <param name="session">Session Token</param>
            <returns>ClientTaskInfo</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IClientRunInfoApi.GetApiRuninfoCurrenttaskWithRunidWithHttpInfo(System.String,System.String)">
            <summary>
            Returns an overview of the currently active task for a run
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="runId"></param>
            <param name="session">Session Token</param>
            <returns>ApiResponse of ClientTaskInfo</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IClientRunInfoApi.GetApiRuninfoList(System.String)">
            <summary>
            Lists an overview of all competition runs visible to the current client
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <returns>ClientRunInfoList</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IClientRunInfoApi.GetApiRuninfoListWithHttpInfo(System.String)">
            <summary>
            Lists an overview of all competition runs visible to the current client
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <returns>ApiResponse of ClientRunInfoList</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IClientRunInfoApi.GetApiRuninfoCurrenttaskWithRunidAsync(System.String,System.String)">
            <summary>
            Returns an overview of the currently active task for a run
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="runId"></param>
            <param name="session">Session Token</param>
            <returns>Task of ClientTaskInfo</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IClientRunInfoApi.GetApiRuninfoCurrenttaskWithRunidAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Returns an overview of the currently active task for a run
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="runId"></param>
            <param name="session">Session Token</param>
            <returns>Task of ApiResponse (ClientTaskInfo)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IClientRunInfoApi.GetApiRuninfoListAsync(System.String)">
            <summary>
            Lists an overview of all competition runs visible to the current client
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <returns>Task of ClientRunInfoList</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IClientRunInfoApi.GetApiRuninfoListAsyncWithHttpInfo(System.String)">
            <summary>
            Lists an overview of all competition runs visible to the current client
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <returns>Task of ApiResponse (ClientRunInfoList)</returns>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Api.ClientRunInfoApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.ClientRunInfoApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.ClientRunInfoApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.#ctor(Org.Vitrivr.DresApi.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.ClientRunInfoApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.GetApiRuninfoCurrenttaskWithRunid(System.String,System.String)">
            <summary>
            Returns an overview of the currently active task for a run 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="runId"></param>
            <param name="session">Session Token</param>
            <returns>ClientTaskInfo</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.GetApiRuninfoCurrenttaskWithRunidWithHttpInfo(System.String,System.String)">
            <summary>
            Returns an overview of the currently active task for a run 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="runId"></param>
            <param name="session">Session Token</param>
            <returns>ApiResponse of ClientTaskInfo</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.GetApiRuninfoCurrenttaskWithRunidAsync(System.String,System.String)">
            <summary>
            Returns an overview of the currently active task for a run 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="runId"></param>
            <param name="session">Session Token</param>
            <returns>Task of ClientTaskInfo</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.GetApiRuninfoCurrenttaskWithRunidAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Returns an overview of the currently active task for a run 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="runId"></param>
            <param name="session">Session Token</param>
            <returns>Task of ApiResponse (ClientTaskInfo)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.GetApiRuninfoList(System.String)">
            <summary>
            Lists an overview of all competition runs visible to the current client 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <returns>ClientRunInfoList</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.GetApiRuninfoListWithHttpInfo(System.String)">
            <summary>
            Lists an overview of all competition runs visible to the current client 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <returns>ApiResponse of ClientRunInfoList</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.GetApiRuninfoListAsync(System.String)">
            <summary>
            Lists an overview of all competition runs visible to the current client 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <returns>Task of ClientRunInfoList</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.GetApiRuninfoListAsyncWithHttpInfo(System.String)">
            <summary>
            Lists an overview of all competition runs visible to the current client 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <returns>Task of ApiResponse (ClientRunInfoList)</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Api.ClientRunInfoApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Api.ILogApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ILogApi.PostLogQuery(System.String,Org.Vitrivr.DresApi.Model.QueryEventLog)">
            <summary>
            Accepts query logs from participants
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryEventLog"> (optional)</param>
            <returns>SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ILogApi.PostLogQueryWithHttpInfo(System.String,Org.Vitrivr.DresApi.Model.QueryEventLog)">
            <summary>
            Accepts query logs from participants
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryEventLog"> (optional)</param>
            <returns>ApiResponse of SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ILogApi.PostLogResult(System.String,Org.Vitrivr.DresApi.Model.QueryResultLog)">
            <summary>
            Accepts result logs from participants
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryResultLog"> (optional)</param>
            <returns>SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ILogApi.PostLogResultWithHttpInfo(System.String,Org.Vitrivr.DresApi.Model.QueryResultLog)">
            <summary>
            Accepts result logs from participants
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryResultLog"> (optional)</param>
            <returns>ApiResponse of SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ILogApi.PostLogQueryAsync(System.String,Org.Vitrivr.DresApi.Model.QueryEventLog)">
            <summary>
            Accepts query logs from participants
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryEventLog"> (optional)</param>
            <returns>Task of SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ILogApi.PostLogQueryAsyncWithHttpInfo(System.String,Org.Vitrivr.DresApi.Model.QueryEventLog)">
            <summary>
            Accepts query logs from participants
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryEventLog"> (optional)</param>
            <returns>Task of ApiResponse (SuccessStatus)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ILogApi.PostLogResultAsync(System.String,Org.Vitrivr.DresApi.Model.QueryResultLog)">
            <summary>
            Accepts result logs from participants
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryResultLog"> (optional)</param>
            <returns>Task of SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ILogApi.PostLogResultAsyncWithHttpInfo(System.String,Org.Vitrivr.DresApi.Model.QueryResultLog)">
            <summary>
            Accepts result logs from participants
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryResultLog"> (optional)</param>
            <returns>Task of ApiResponse (SuccessStatus)</returns>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Api.LogApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.LogApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.LogApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.#ctor(Org.Vitrivr.DresApi.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.LogApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.PostLogQuery(System.String,Org.Vitrivr.DresApi.Model.QueryEventLog)">
            <summary>
            Accepts query logs from participants 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryEventLog"> (optional)</param>
            <returns>SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.PostLogQueryWithHttpInfo(System.String,Org.Vitrivr.DresApi.Model.QueryEventLog)">
            <summary>
            Accepts query logs from participants 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryEventLog"> (optional)</param>
            <returns>ApiResponse of SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.PostLogQueryAsync(System.String,Org.Vitrivr.DresApi.Model.QueryEventLog)">
            <summary>
            Accepts query logs from participants 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryEventLog"> (optional)</param>
            <returns>Task of SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.PostLogQueryAsyncWithHttpInfo(System.String,Org.Vitrivr.DresApi.Model.QueryEventLog)">
            <summary>
            Accepts query logs from participants 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryEventLog"> (optional)</param>
            <returns>Task of ApiResponse (SuccessStatus)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.PostLogResult(System.String,Org.Vitrivr.DresApi.Model.QueryResultLog)">
            <summary>
            Accepts result logs from participants 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryResultLog"> (optional)</param>
            <returns>SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.PostLogResultWithHttpInfo(System.String,Org.Vitrivr.DresApi.Model.QueryResultLog)">
            <summary>
            Accepts result logs from participants 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryResultLog"> (optional)</param>
            <returns>ApiResponse of SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.PostLogResultAsync(System.String,Org.Vitrivr.DresApi.Model.QueryResultLog)">
            <summary>
            Accepts result logs from participants 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryResultLog"> (optional)</param>
            <returns>Task of SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.LogApi.PostLogResultAsyncWithHttpInfo(System.String,Org.Vitrivr.DresApi.Model.QueryResultLog)">
            <summary>
            Accepts result logs from participants 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token</param>
            <param name="queryResultLog"> (optional)</param>
            <returns>Task of ApiResponse (SuccessStatus)</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Api.LogApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Api.LogApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Api.IStatusApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IStatusApi.GetApiStatusTime">
            <summary>
            Returns the current time on the server.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>CurrentTime</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IStatusApi.GetApiStatusTimeWithHttpInfo">
            <summary>
            Returns the current time on the server.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of CurrentTime</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IStatusApi.GetApiStatusTimeAsync">
            <summary>
            Returns the current time on the server.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of CurrentTime</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IStatusApi.GetApiStatusTimeAsyncWithHttpInfo">
            <summary>
            Returns the current time on the server.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (CurrentTime)</returns>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Api.StatusApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.StatusApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.StatusApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.StatusApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.StatusApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.StatusApi.#ctor(Org.Vitrivr.DresApi.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.StatusApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.StatusApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.StatusApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.StatusApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.StatusApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.StatusApi.GetApiStatusTime">
            <summary>
            Returns the current time on the server. 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>CurrentTime</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.StatusApi.GetApiStatusTimeWithHttpInfo">
            <summary>
            Returns the current time on the server. 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of CurrentTime</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.StatusApi.GetApiStatusTimeAsync">
            <summary>
            Returns the current time on the server. 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of CurrentTime</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.StatusApi.GetApiStatusTimeAsyncWithHttpInfo">
            <summary>
            Returns the current time on the server. 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (CurrentTime)</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Api.StatusApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Api.StatusApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Api.ISubmissionApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ISubmissionApi.GetSubmit(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Endpoint to accept submissions
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="collection">Collection identifier. Optional, in which case the default collection for the run will be considered. (optional)</param>
            <param name="item">Identifier for the actual media object or media file. (optional)</param>
            <param name="frame">Frame number for media with temporal progression (e.g. video). (optional)</param>
            <param name="shot">Shot number for media with temporal progression (e.g. video). (optional)</param>
            <param name="timecode">Timecode for media with temporal progression (e.g. video). (optional)</param>
            <param name="session">Session Token (optional)</param>
            <returns>SuccessfulSubmissionsStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ISubmissionApi.GetSubmitWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Endpoint to accept submissions
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="collection">Collection identifier. Optional, in which case the default collection for the run will be considered. (optional)</param>
            <param name="item">Identifier for the actual media object or media file. (optional)</param>
            <param name="frame">Frame number for media with temporal progression (e.g. video). (optional)</param>
            <param name="shot">Shot number for media with temporal progression (e.g. video). (optional)</param>
            <param name="timecode">Timecode for media with temporal progression (e.g. video). (optional)</param>
            <param name="session">Session Token (optional)</param>
            <returns>ApiResponse of SuccessfulSubmissionsStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ISubmissionApi.GetSubmitAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Endpoint to accept submissions
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="collection">Collection identifier. Optional, in which case the default collection for the run will be considered. (optional)</param>
            <param name="item">Identifier for the actual media object or media file. (optional)</param>
            <param name="frame">Frame number for media with temporal progression (e.g. video). (optional)</param>
            <param name="shot">Shot number for media with temporal progression (e.g. video). (optional)</param>
            <param name="timecode">Timecode for media with temporal progression (e.g. video). (optional)</param>
            <param name="session">Session Token (optional)</param>
            <returns>Task of SuccessfulSubmissionsStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.ISubmissionApi.GetSubmitAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Endpoint to accept submissions
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="collection">Collection identifier. Optional, in which case the default collection for the run will be considered. (optional)</param>
            <param name="item">Identifier for the actual media object or media file. (optional)</param>
            <param name="frame">Frame number for media with temporal progression (e.g. video). (optional)</param>
            <param name="shot">Shot number for media with temporal progression (e.g. video). (optional)</param>
            <param name="timecode">Timecode for media with temporal progression (e.g. video). (optional)</param>
            <param name="session">Session Token (optional)</param>
            <returns>Task of ApiResponse (SuccessfulSubmissionsStatus)</returns>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Api.SubmissionApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.SubmissionApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.SubmissionApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.SubmissionApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.SubmissionApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.SubmissionApi.#ctor(Org.Vitrivr.DresApi.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.SubmissionApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.SubmissionApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.SubmissionApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.SubmissionApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.SubmissionApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.SubmissionApi.GetSubmit(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Endpoint to accept submissions 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="collection">Collection identifier. Optional, in which case the default collection for the run will be considered. (optional)</param>
            <param name="item">Identifier for the actual media object or media file. (optional)</param>
            <param name="frame">Frame number for media with temporal progression (e.g. video). (optional)</param>
            <param name="shot">Shot number for media with temporal progression (e.g. video). (optional)</param>
            <param name="timecode">Timecode for media with temporal progression (e.g. video). (optional)</param>
            <param name="session">Session Token (optional)</param>
            <returns>SuccessfulSubmissionsStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.SubmissionApi.GetSubmitWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Endpoint to accept submissions 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="collection">Collection identifier. Optional, in which case the default collection for the run will be considered. (optional)</param>
            <param name="item">Identifier for the actual media object or media file. (optional)</param>
            <param name="frame">Frame number for media with temporal progression (e.g. video). (optional)</param>
            <param name="shot">Shot number for media with temporal progression (e.g. video). (optional)</param>
            <param name="timecode">Timecode for media with temporal progression (e.g. video). (optional)</param>
            <param name="session">Session Token (optional)</param>
            <returns>ApiResponse of SuccessfulSubmissionsStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.SubmissionApi.GetSubmitAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Endpoint to accept submissions 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="collection">Collection identifier. Optional, in which case the default collection for the run will be considered. (optional)</param>
            <param name="item">Identifier for the actual media object or media file. (optional)</param>
            <param name="frame">Frame number for media with temporal progression (e.g. video). (optional)</param>
            <param name="shot">Shot number for media with temporal progression (e.g. video). (optional)</param>
            <param name="timecode">Timecode for media with temporal progression (e.g. video). (optional)</param>
            <param name="session">Session Token (optional)</param>
            <returns>Task of SuccessfulSubmissionsStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.SubmissionApi.GetSubmitAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Endpoint to accept submissions 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="collection">Collection identifier. Optional, in which case the default collection for the run will be considered. (optional)</param>
            <param name="item">Identifier for the actual media object or media file. (optional)</param>
            <param name="frame">Frame number for media with temporal progression (e.g. video). (optional)</param>
            <param name="shot">Shot number for media with temporal progression (e.g. video). (optional)</param>
            <param name="timecode">Timecode for media with temporal progression (e.g. video). (optional)</param>
            <param name="session">Session Token (optional)</param>
            <returns>Task of ApiResponse (SuccessfulSubmissionsStatus)</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Api.SubmissionApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Api.SubmissionApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Api.IUserApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.DeleteApiUserWithUserid(System.Int64)">
            <summary>
            Deletes the specified user. Requires ADMIN privileges
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <returns>UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.DeleteApiUserWithUseridWithHttpInfo(System.Int64)">
            <summary>
            Deletes the specified user. Requires ADMIN privileges
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <returns>ApiResponse of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.GetApiLogout(System.String)">
            <summary>
            Clears all user roles of the current session.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.GetApiLogoutWithHttpInfo(System.String)">
            <summary>
            Clears all user roles of the current session.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>ApiResponse of SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.GetApiUserSession(System.String)">
            <summary>
            Get current sessionId
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>SessionId</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.GetApiUserSessionWithHttpInfo(System.String)">
            <summary>
            Get current sessionId
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>ApiResponse of SessionId</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.GetApiUserWithUserid(System.String)">
            <summary>
            Gets details of the user with the given id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User's UID</param>
            <returns>UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.GetApiUserWithUseridWithHttpInfo(System.String)">
            <summary>
            Gets details of the user with the given id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User's UID</param>
            <returns>ApiResponse of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.PatchApiUserWithUserid(System.String,Org.Vitrivr.DresApi.Model.UserRequest)">
            <summary>
            Updates the specified user, if it exists. Anyone is allowed to update their data, however only ADMINs are allowed to update anyone
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <param name="userRequest"> (optional)</param>
            <returns>UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.PatchApiUserWithUseridWithHttpInfo(System.String,Org.Vitrivr.DresApi.Model.UserRequest)">
            <summary>
            Updates the specified user, if it exists. Anyone is allowed to update their data, however only ADMINs are allowed to update anyone
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <param name="userRequest"> (optional)</param>
            <returns>ApiResponse of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.PostApiLogin(Org.Vitrivr.DresApi.Model.LoginRequest)">
            <summary>
            Sets roles for session based on user account and returns a session cookie.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="loginRequest"> (optional)</param>
            <returns>UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.PostApiLoginWithHttpInfo(Org.Vitrivr.DresApi.Model.LoginRequest)">
            <summary>
            Sets roles for session based on user account and returns a session cookie.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="loginRequest"> (optional)</param>
            <returns>ApiResponse of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.DeleteApiUserWithUseridAsync(System.Int64)">
            <summary>
            Deletes the specified user. Requires ADMIN privileges
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <returns>Task of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.DeleteApiUserWithUseridAsyncWithHttpInfo(System.Int64)">
            <summary>
            Deletes the specified user. Requires ADMIN privileges
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <returns>Task of ApiResponse (UserDetails)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.GetApiLogoutAsync(System.String)">
            <summary>
            Clears all user roles of the current session.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>Task of SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.GetApiLogoutAsyncWithHttpInfo(System.String)">
            <summary>
            Clears all user roles of the current session.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>Task of ApiResponse (SuccessStatus)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.GetApiUserSessionAsync(System.String)">
            <summary>
            Get current sessionId
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>Task of SessionId</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.GetApiUserSessionAsyncWithHttpInfo(System.String)">
            <summary>
            Get current sessionId
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>Task of ApiResponse (SessionId)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.GetApiUserWithUseridAsync(System.String)">
            <summary>
            Gets details of the user with the given id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User's UID</param>
            <returns>Task of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.GetApiUserWithUseridAsyncWithHttpInfo(System.String)">
            <summary>
            Gets details of the user with the given id
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User's UID</param>
            <returns>Task of ApiResponse (UserDetails)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.PatchApiUserWithUseridAsync(System.String,Org.Vitrivr.DresApi.Model.UserRequest)">
            <summary>
            Updates the specified user, if it exists. Anyone is allowed to update their data, however only ADMINs are allowed to update anyone
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <param name="userRequest"> (optional)</param>
            <returns>Task of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.PatchApiUserWithUseridAsyncWithHttpInfo(System.String,Org.Vitrivr.DresApi.Model.UserRequest)">
            <summary>
            Updates the specified user, if it exists. Anyone is allowed to update their data, however only ADMINs are allowed to update anyone
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <param name="userRequest"> (optional)</param>
            <returns>Task of ApiResponse (UserDetails)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.PostApiLoginAsync(Org.Vitrivr.DresApi.Model.LoginRequest)">
            <summary>
            Sets roles for session based on user account and returns a session cookie.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="loginRequest"> (optional)</param>
            <returns>Task of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.IUserApi.PostApiLoginAsyncWithHttpInfo(Org.Vitrivr.DresApi.Model.LoginRequest)">
            <summary>
            Sets roles for session based on user account and returns a session cookie.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="loginRequest"> (optional)</param>
            <returns>Task of ApiResponse (UserDetails)</returns>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Api.UserApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.UserApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.UserApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.#ctor(Org.Vitrivr.DresApi.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Api.UserApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.DeleteApiUserWithUserid(System.Int64)">
            <summary>
            Deletes the specified user. Requires ADMIN privileges 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <returns>UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.DeleteApiUserWithUseridWithHttpInfo(System.Int64)">
            <summary>
            Deletes the specified user. Requires ADMIN privileges 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <returns>ApiResponse of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.DeleteApiUserWithUseridAsync(System.Int64)">
            <summary>
            Deletes the specified user. Requires ADMIN privileges 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <returns>Task of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.DeleteApiUserWithUseridAsyncWithHttpInfo(System.Int64)">
            <summary>
            Deletes the specified user. Requires ADMIN privileges 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <returns>Task of ApiResponse (UserDetails)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.GetApiLogout(System.String)">
            <summary>
            Clears all user roles of the current session. 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.GetApiLogoutWithHttpInfo(System.String)">
            <summary>
            Clears all user roles of the current session. 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>ApiResponse of SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.GetApiLogoutAsync(System.String)">
            <summary>
            Clears all user roles of the current session. 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>Task of SuccessStatus</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.GetApiLogoutAsyncWithHttpInfo(System.String)">
            <summary>
            Clears all user roles of the current session. 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>Task of ApiResponse (SuccessStatus)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.GetApiUserSession(System.String)">
            <summary>
            Get current sessionId 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>SessionId</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.GetApiUserSessionWithHttpInfo(System.String)">
            <summary>
            Get current sessionId 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>ApiResponse of SessionId</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.GetApiUserSessionAsync(System.String)">
            <summary>
            Get current sessionId 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>Task of SessionId</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.GetApiUserSessionAsyncWithHttpInfo(System.String)">
            <summary>
            Get current sessionId 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="session">Session Token (optional)</param>
            <returns>Task of ApiResponse (SessionId)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.GetApiUserWithUserid(System.String)">
            <summary>
            Gets details of the user with the given id 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User's UID</param>
            <returns>UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.GetApiUserWithUseridWithHttpInfo(System.String)">
            <summary>
            Gets details of the user with the given id 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User's UID</param>
            <returns>ApiResponse of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.GetApiUserWithUseridAsync(System.String)">
            <summary>
            Gets details of the user with the given id 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User's UID</param>
            <returns>Task of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.GetApiUserWithUseridAsyncWithHttpInfo(System.String)">
            <summary>
            Gets details of the user with the given id 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User's UID</param>
            <returns>Task of ApiResponse (UserDetails)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.PatchApiUserWithUserid(System.String,Org.Vitrivr.DresApi.Model.UserRequest)">
            <summary>
            Updates the specified user, if it exists. Anyone is allowed to update their data, however only ADMINs are allowed to update anyone 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <param name="userRequest"> (optional)</param>
            <returns>UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.PatchApiUserWithUseridWithHttpInfo(System.String,Org.Vitrivr.DresApi.Model.UserRequest)">
            <summary>
            Updates the specified user, if it exists. Anyone is allowed to update their data, however only ADMINs are allowed to update anyone 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <param name="userRequest"> (optional)</param>
            <returns>ApiResponse of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.PatchApiUserWithUseridAsync(System.String,Org.Vitrivr.DresApi.Model.UserRequest)">
            <summary>
            Updates the specified user, if it exists. Anyone is allowed to update their data, however only ADMINs are allowed to update anyone 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <param name="userRequest"> (optional)</param>
            <returns>Task of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.PatchApiUserWithUseridAsyncWithHttpInfo(System.String,Org.Vitrivr.DresApi.Model.UserRequest)">
            <summary>
            Updates the specified user, if it exists. Anyone is allowed to update their data, however only ADMINs are allowed to update anyone 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="userId">User ID</param>
            <param name="userRequest"> (optional)</param>
            <returns>Task of ApiResponse (UserDetails)</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.PostApiLogin(Org.Vitrivr.DresApi.Model.LoginRequest)">
            <summary>
            Sets roles for session based on user account and returns a session cookie. 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="loginRequest"> (optional)</param>
            <returns>UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.PostApiLoginWithHttpInfo(Org.Vitrivr.DresApi.Model.LoginRequest)">
            <summary>
            Sets roles for session based on user account and returns a session cookie. 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="loginRequest"> (optional)</param>
            <returns>ApiResponse of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.PostApiLoginAsync(Org.Vitrivr.DresApi.Model.LoginRequest)">
            <summary>
            Sets roles for session based on user account and returns a session cookie. 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="loginRequest"> (optional)</param>
            <returns>Task of UserDetails</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Api.UserApi.PostApiLoginAsyncWithHttpInfo(Org.Vitrivr.DresApi.Model.LoginRequest)">
            <summary>
            Sets roles for session based on user account and returns a session cookie. 
            </summary>
            <exception cref="T:Org.Vitrivr.DresApi.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="loginRequest"> (optional)</param>
            <returns>Task of ApiResponse (UserDetails)</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Api.UserApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Api.UserApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Client.ApiClient">
            <summary>
            API client is mainly responsible for making the HTTP call to the API backend.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Client.ApiClient"/> class
            with default configuration.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.#ctor(Org.Vitrivr.DresApi.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Client.ApiClient"/> class
            with default base path (http://localhost).
            </summary>
            <param name="config">An instance of Configuration.</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Client.ApiClient"/> class
            with default configuration.
            </summary>
            <param name="basePath">The base path.</param>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Client.ApiClient.Default">
            <summary>
            Gets or sets the default API client for making HTTP calls.
            </summary>
            <value>The default API client.</value>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the HTTP request (Sync).
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content Type of the request</param>
            <returns>Object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the asynchronous HTTP request.
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content type.</param>
            <returns>The Task instance.</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.EscapeString(System.String)">
            <summary>
            Escape string (url-encoded).
            </summary>
            <param name="str">String to be escaped.</param>
            <returns>Escaped string.</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
            <summary>
            Create FileParameter based on Stream.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="stream">Input stream.</param>
            <returns>FileParameter.</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.ParameterToString(System.Object)">
            <summary>
            If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
            If parameter is a list, join the list with ",".
            Otherwise just return the string.
            </summary>
            <param name="obj">The parameter (header, path, query, form).</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="response">The HTTP response.</param>
            <param name="type">Object type.</param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.Serialize(System.Object)">
            <summary>
            Serialize an input (model) into JSON string
            </summary>
            <param name="obj">Object.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.IsJsonMime(System.String)">
             <summary>
            Check if the given MIME is a JSON MIME.
            JSON MIME examples:
                application/json
                application/json; charset=UTF8
                APPLICATION/JSON
                application/vnd.company+json
             </summary>
             <param name="mime">MIME</param>
             <returns>Returns True if MIME type is json.</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.SelectHeaderContentType(System.String[])">
            <summary>
            Select the Content-Type header's value from the given content-type array:
            if JSON type exists in the given array, use it;
            otherwise use the first one defined in 'consumes'
            </summary>
            <param name="contentTypes">The Content-Type array to select from.</param>
            <returns>The Content-Type header to use.</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.SelectHeaderAccept(System.String[])">
            <summary>
            Select the Accept header's value from the given accepts array:
            if JSON exists in the given array, use it;
            otherwise use all of them (joining into a string)
            </summary>
            <param name="accepts">The accepts array to select from.</param>
            <returns>The Accept header to use.</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.Base64Encode(System.String)">
            <summary>
            Encode string in base64 format.
            </summary>
            <param name="text">String to be encoded.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.ConvertType(System.Object,System.Type)">
            <summary>
            Dynamically cast the object into target type.
            </summary>
            <param name="fromObject">Object to be casted</param>
            <param name="toObject">Target type</param>
            <returns>Casted object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.ReadAsBytes(System.IO.Stream)">
            <summary>
            Convert stream to byte array
            </summary>
            <param name="inputStream">Input stream to be converted</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.UrlEncode(System.String)">
            <summary>
            URL encode a string
            Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50
            </summary>
            <param name="input">String to be URL encoded</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.SanitizeFilename(System.String)">
            <summary>
            Sanitize filename by removing the path
            </summary>
            <param name="filename">Filename</param>
            <returns>Filename</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.ParameterToKeyValuePairs(System.String,System.String,System.Object)">
            <summary>
            Convert params to key/value pairs. 
            Use collectionFormat to properly format lists and collections.
            </summary>
            <param name="collectionFormat">Collection format.</param>
            <param name="name">Key name.</param>
            <param name="value">Value object.</param>
            <returns>A list of KeyValuePairs</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiClient.IsCollection(System.Object)">
            <summary>
            Check if generic object is a collection.
            </summary>
            <param name="value"></param>
            <returns>True if object is a collection type</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.ApiClient.Configuration">
            <summary>
            Gets or sets an instance of the IReadableConfiguration.
            </summary>
            <value>An instance of the IReadableConfiguration.</value>
            <remarks>
            <see cref="T:Org.Vitrivr.DresApi.Client.IReadableConfiguration"/> helps us to avoid modifying possibly global
            configuration values from within a given client. It does not guarantee thread-safety
            of the <see cref="P:Org.Vitrivr.DresApi.Client.ApiClient.Configuration"/> instance in any way.
            </remarks>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.ApiClient.RestClient">
            <summary>
            Gets or sets the RestClient.
            </summary>
            <value>An instance of the RestClient</value>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Client.ApiException">
            <summary>
            API Exception
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Client.ApiException"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiException.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Client.ApiResponse`1">
            <summary>
            API Response
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Client.ApiResponse`1"/> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="headers">HTTP headers.</param>
            <param name="data">Data (parsed HTTP body)</param>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.ApiResponse`1.StatusCode">
            <summary>
            Gets or sets the status code (HTTP status code)
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.ApiResponse`1.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.ApiResponse`1.Data">
            <summary>
            Gets or sets the data (parsed HTTP body)
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Client.Configuration">
            <summary>
            Represents a set of configuration settings
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Client.IReadableConfiguration">
            <summary>
            Represents a readable-only configuration contract.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.IReadableConfiguration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.IReadableConfiguration.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>Access token.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.IReadableConfiguration.ApiKey">
            <summary>
            Gets the API key.
            </summary>
            <value>API key.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.IReadableConfiguration.ApiKeyPrefix">
            <summary>
            Gets the API key prefix.
            </summary>
            <value>API key prefix.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.IReadableConfiguration.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>Base path.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.IReadableConfiguration.DateTimeFormat">
            <summary>
            Gets the date time format.
            </summary>
            <value>Date time foramt.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.IReadableConfiguration.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <value>Default header.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.IReadableConfiguration.TempFolderPath">
            <summary>
            Gets the temp folder path.
            </summary>
            <value>Temp folder path.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.IReadableConfiguration.Timeout">
            <summary>
            Gets the HTTP connection timeout (in milliseconds)
            </summary>
            <value>HTTP connection timeout.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.IReadableConfiguration.UserAgent">
            <summary>
            Gets the user agent.
            </summary>
            <value>User agent.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.IReadableConfiguration.Username">
            <summary>
            Gets the username.
            </summary>
            <value>Username.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.IReadableConfiguration.Password">
            <summary>
            Gets the password.
            </summary>
            <value>Password.</value>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Client.Configuration.Version">
            <summary>
            Version of the package.
            </summary>
            <value>Version of the package.</value>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Client.Configuration.ISO8601_DATETIME_FORMAT">
            <summary>
            Identifier for ISO 8601 DateTime Format
            </summary>
            <remarks>See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information.</remarks>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Client.Configuration.DefaultExceptionFactory">
            <summary>
            Default creation of exceptions for a given method name and response object
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Client.Configuration._apiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Client.Configuration._apiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Client.Configuration"/> class
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.Configuration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Client.Configuration"/> class
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.Configuration.#ctor(Org.Vitrivr.DresApi.Client.ApiClient,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Client.Configuration"/> class with different settings
            </summary>
            <param name="apiClient">Api client</param>
            <param name="defaultHeader">Dictionary of default HTTP header</param>
            <param name="username">Username</param>
            <param name="password">Password</param>
            <param name="accessToken">accessToken</param>
            <param name="apiKey">Dictionary of API key</param>
            <param name="apiKeyPrefix">Dictionary of API key prefix</param>
            <param name="tempFolderPath">Temp folder path</param>
            <param name="dateTimeFormat">DateTime format string</param>
            <param name="timeout">HTTP connection timeout (in milliseconds)</param>
            <param name="userAgent">HTTP user agent</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.Configuration.#ctor(Org.Vitrivr.DresApi.Client.ApiClient)">
            <summary>
            Initializes a new instance of the Configuration class.
            </summary>
            <param name="apiClient">Api client.</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.Configuration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.Configuration.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.Configuration.CreateApiClient">
            <summary>
            Creates a new <see cref="P:Org.Vitrivr.DresApi.Client.Configuration.ApiClient"/> based on this <see cref="T:Org.Vitrivr.DresApi.Client.Configuration"/> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.Configuration.ToDebugReport">
            <summary>
            Returns a string with essential information for debugging.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.Configuration.AddApiKey(System.String,System.String)">
            <summary>
            Add Api Key Header.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
            <returns></returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.Configuration.AddApiKeyPrefix(System.String,System.String)">
            <summary>
            Sets the API key prefix.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.Configuration.Default">
            <summary>
            Gets or sets the default Configuration.
            </summary>
            <value>Configuration.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.Configuration.ApiClient">
            <summary>
            Gets an instance of an ApiClient for this configuration
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.Configuration.BasePath">
            <summary>
            Gets or sets the base path for API access.
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.Configuration.DefaultHeader">
            <summary>
            Gets or sets the default header.
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.Configuration.Timeout">
            <summary>
            Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds.
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.Configuration.UserAgent">
            <summary>
            Gets or sets the HTTP user agent.
            </summary>
            <value>Http user agent.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.Configuration.Username">
            <summary>
            Gets or sets the username (HTTP basic authentication).
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.Configuration.Password">
            <summary>
            Gets or sets the password (HTTP basic authentication).
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.Configuration.AccessToken">
            <summary>
            Gets or sets the access token for OAuth2 authentication.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.Configuration.TempFolderPath">
            <summary>
            Gets or sets the temporary folder path to store the files downloaded from the server.
            </summary>
            <value>Folder path.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.Configuration.DateTimeFormat">
            <summary>
            Gets or sets the date time format used when serializing in the ApiClient
            By default, it's set to ISO 8601 - "o", for others see:
            https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
            and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
            No validation is done to ensure that the string you're providing is valid
            </summary>
            <value>The DateTimeFormat string</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.Configuration.ApiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Client.Configuration.ApiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Client.ExceptionFactory">
            <summary>
            A delegate to ExceptionFactory method
            </summary>
            <param name="methodName">Method name</param>
            <param name="response">Response</param>
            <returns>Exceptions</returns>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Client.GlobalConfiguration">
            <summary>
            <see cref="T:Org.Vitrivr.DresApi.Client.GlobalConfiguration"/> provides a compile-time extension point for globally configuring
            API Clients.
            </summary>
            <remarks>
            A customized implementation via partial class may reside in another file and may
            be excluded from automatic generation via a .openapi-generator-ignore file.
            </remarks>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Client.OpenAPIDateConverter">
            <summary>
            Formatter for 'date' openapi formats ss defined by full-date - RFC3339
            see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#data-types
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Client.OpenAPIDateConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Client.OpenAPIDateConverter"/> class.
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.ClientRunInfo">
            <summary>
            ClientRunInfo
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.ClientRunInfo"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfo.#ctor(System.String,System.String,System.String,Org.Vitrivr.DresApi.Model.ClientRunInfo.StatusEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.ClientRunInfo"/> class.
            </summary>
            <param name="id">id (required).</param>
            <param name="name">name (required).</param>
            <param name="description">description.</param>
            <param name="status">status (required).</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfo.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfo.Equals(Org.Vitrivr.DresApi.Model.ClientRunInfo)">
            <summary>
            Returns true if ClientRunInfo instances are equal
            </summary>
            <param name="input">Instance of ClientRunInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfo.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.ClientRunInfo.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.ClientRunInfo.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.ClientRunInfo.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.ClientRunInfo.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.ClientRunInfo.StatusEnum">
            <summary>
            Defines Status
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.ClientRunInfo.StatusEnum.CREATED">
            <summary>
            Enum CREATED for value: CREATED
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.ClientRunInfo.StatusEnum.ACTIVE">
            <summary>
            Enum ACTIVE for value: ACTIVE
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.ClientRunInfo.StatusEnum.PREPARINGTASK">
            <summary>
            Enum PREPARINGTASK for value: PREPARING_TASK
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.ClientRunInfo.StatusEnum.RUNNINGTASK">
            <summary>
            Enum RUNNINGTASK for value: RUNNING_TASK
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.ClientRunInfo.StatusEnum.TASKENDED">
            <summary>
            Enum TASKENDED for value: TASK_ENDED
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.ClientRunInfo.StatusEnum.TERMINATED">
            <summary>
            Enum TERMINATED for value: TERMINATED
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.ClientRunInfoList">
            <summary>
            ClientRunInfoList
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfoList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.ClientRunInfoList"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfoList.#ctor(System.Collections.Generic.List{Org.Vitrivr.DresApi.Model.ClientRunInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.ClientRunInfoList"/> class.
            </summary>
            <param name="runs">runs (required).</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfoList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfoList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfoList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfoList.Equals(Org.Vitrivr.DresApi.Model.ClientRunInfoList)">
            <summary>
            Returns true if ClientRunInfoList instances are equal
            </summary>
            <param name="input">Instance of ClientRunInfoList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfoList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientRunInfoList.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.ClientRunInfoList.Runs">
            <summary>
            Gets or Sets Runs
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.ClientTaskInfo">
            <summary>
            ClientTaskInfo
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientTaskInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.ClientTaskInfo"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientTaskInfo.#ctor(System.String,System.String,System.String,System.Int64,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.ClientTaskInfo"/> class.
            </summary>
            <param name="id">id (required).</param>
            <param name="name">name (required).</param>
            <param name="taskGroup">taskGroup (required).</param>
            <param name="remainingTime">remainingTime (required).</param>
            <param name="running">running (required).</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientTaskInfo.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientTaskInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientTaskInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientTaskInfo.Equals(Org.Vitrivr.DresApi.Model.ClientTaskInfo)">
            <summary>
            Returns true if ClientTaskInfo instances are equal
            </summary>
            <param name="input">Instance of ClientTaskInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientTaskInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ClientTaskInfo.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.ClientTaskInfo.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.ClientTaskInfo.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.ClientTaskInfo.TaskGroup">
            <summary>
            Gets or Sets TaskGroup
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.ClientTaskInfo.RemainingTime">
            <summary>
            Gets or Sets RemainingTime
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.ClientTaskInfo.Running">
            <summary>
            Gets or Sets Running
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.CurrentTime">
            <summary>
            CurrentTime
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.CurrentTime.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.CurrentTime"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.CurrentTime.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.CurrentTime"/> class.
            </summary>
            <param name="timeStamp">timeStamp (required).</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.CurrentTime.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.CurrentTime.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.CurrentTime.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.CurrentTime.Equals(Org.Vitrivr.DresApi.Model.CurrentTime)">
            <summary>
            Returns true if CurrentTime instances are equal
            </summary>
            <param name="input">Instance of CurrentTime to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.CurrentTime.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.CurrentTime.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.CurrentTime.TimeStamp">
            <summary>
            Gets or Sets TimeStamp
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.ErrorStatus">
            <summary>
            ErrorStatus
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ErrorStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.ErrorStatus"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ErrorStatus.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.ErrorStatus"/> class.
            </summary>
            <param name="description">description (required).</param>
            <param name="status">status (required).</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ErrorStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ErrorStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ErrorStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ErrorStatus.Equals(Org.Vitrivr.DresApi.Model.ErrorStatus)">
            <summary>
            Returns true if ErrorStatus instances are equal
            </summary>
            <param name="input">Instance of ErrorStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ErrorStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.ErrorStatus.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.ErrorStatus.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.ErrorStatus.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.LoginRequest">
            <summary>
            LoginRequest
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.LoginRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.LoginRequest"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.LoginRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.LoginRequest"/> class.
            </summary>
            <param name="username">username (required).</param>
            <param name="password">password (required).</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.LoginRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.LoginRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.LoginRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.LoginRequest.Equals(Org.Vitrivr.DresApi.Model.LoginRequest)">
            <summary>
            Returns true if LoginRequest instances are equal
            </summary>
            <param name="input">Instance of LoginRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.LoginRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.LoginRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.LoginRequest.Username">
            <summary>
            Gets or Sets Username
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.LoginRequest.Password">
            <summary>
            Gets or Sets Password
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.QueryEvent">
            <summary>
            QueryEvent
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.QueryEvent"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEvent.#ctor(System.Int64,Org.Vitrivr.DresApi.Model.QueryEvent.CategoryEnum,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.QueryEvent"/> class.
            </summary>
            <param name="timestamp">timestamp (required).</param>
            <param name="category">category (required).</param>
            <param name="type">type (required).</param>
            <param name="value">value (required).</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEvent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEvent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEvent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEvent.Equals(Org.Vitrivr.DresApi.Model.QueryEvent)">
            <summary>
            Returns true if QueryEvent instances are equal
            </summary>
            <param name="input">Instance of QueryEvent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEvent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEvent.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryEvent.Category">
            <summary>
            Gets or Sets Category
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryEvent.Timestamp">
            <summary>
            Gets or Sets Timestamp
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryEvent.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryEvent.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.QueryEvent.CategoryEnum">
            <summary>
            Defines Category
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.QueryEvent.CategoryEnum.TEXT">
            <summary>
            Enum TEXT for value: TEXT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.QueryEvent.CategoryEnum.IMAGE">
            <summary>
            Enum IMAGE for value: IMAGE
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.QueryEvent.CategoryEnum.SKETCH">
            <summary>
            Enum SKETCH for value: SKETCH
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.QueryEvent.CategoryEnum.FILTER">
            <summary>
            Enum FILTER for value: FILTER
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.QueryEvent.CategoryEnum.BROWSING">
            <summary>
            Enum BROWSING for value: BROWSING
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.QueryEvent.CategoryEnum.COOPERATION">
            <summary>
            Enum COOPERATION for value: COOPERATION
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.QueryEvent.CategoryEnum.OTHER">
            <summary>
            Enum OTHER for value: OTHER
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.QueryEventLog">
            <summary>
            QueryEventLog
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEventLog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.QueryEventLog"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEventLog.#ctor(System.Int64,System.Collections.Generic.List{Org.Vitrivr.DresApi.Model.QueryEvent})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.QueryEventLog"/> class.
            </summary>
            <param name="timestamp">timestamp (required).</param>
            <param name="events">events (required).</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEventLog.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEventLog.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEventLog.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEventLog.Equals(Org.Vitrivr.DresApi.Model.QueryEventLog)">
            <summary>
            Returns true if QueryEventLog instances are equal
            </summary>
            <param name="input">Instance of QueryEventLog to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEventLog.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryEventLog.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryEventLog.Timestamp">
            <summary>
            Gets or Sets Timestamp
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryEventLog.Events">
            <summary>
            Gets or Sets Events
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.QueryResult">
            <summary>
            QueryResult
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.QueryResult"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResult.#ctor(System.String,System.Int32,System.Int32,System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.QueryResult"/> class.
            </summary>
            <param name="item">item (required).</param>
            <param name="segment">segment.</param>
            <param name="frame">frame.</param>
            <param name="score">score.</param>
            <param name="rank">rank.</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResult.Equals(Org.Vitrivr.DresApi.Model.QueryResult)">
            <summary>
            Returns true if QueryResult instances are equal
            </summary>
            <param name="input">Instance of QueryResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResult.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryResult.Item">
            <summary>
            Gets or Sets Item
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryResult.Segment">
            <summary>
            Gets or Sets Segment
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryResult.Frame">
            <summary>
            Gets or Sets Frame
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryResult.Score">
            <summary>
            Gets or Sets Score
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryResult.Rank">
            <summary>
            Gets or Sets Rank
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.QueryResultLog">
            <summary>
            QueryResultLog
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResultLog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.QueryResultLog"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResultLog.#ctor(System.Int64,System.String,System.String,System.Collections.Generic.List{Org.Vitrivr.DresApi.Model.QueryResult},System.Collections.Generic.List{Org.Vitrivr.DresApi.Model.QueryEvent})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.QueryResultLog"/> class.
            </summary>
            <param name="timestamp">timestamp (required).</param>
            <param name="sortType">sortType (required).</param>
            <param name="resultSetAvailability">resultSetAvailability (required).</param>
            <param name="results">results (required).</param>
            <param name="events">events (required).</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResultLog.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResultLog.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResultLog.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResultLog.Equals(Org.Vitrivr.DresApi.Model.QueryResultLog)">
            <summary>
            Returns true if QueryResultLog instances are equal
            </summary>
            <param name="input">Instance of QueryResultLog to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResultLog.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.QueryResultLog.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryResultLog.Timestamp">
            <summary>
            Gets or Sets Timestamp
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryResultLog.SortType">
            <summary>
            Gets or Sets SortType
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryResultLog.ResultSetAvailability">
            <summary>
            Gets or Sets ResultSetAvailability
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryResultLog.Results">
            <summary>
            Gets or Sets Results
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.QueryResultLog.Events">
            <summary>
            Gets or Sets Events
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.SessionId">
            <summary>
            SessionId
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SessionId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.SessionId"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SessionId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.SessionId"/> class.
            </summary>
            <param name="sessionId">sessionId (required).</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SessionId.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SessionId.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SessionId.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SessionId.Equals(Org.Vitrivr.DresApi.Model.SessionId)">
            <summary>
            Returns true if SessionId instances are equal
            </summary>
            <param name="input">Instance of SessionId to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SessionId.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SessionId.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.SessionId._SessionId">
            <summary>
            Gets or Sets _SessionId
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus">
            <summary>
            SuccessfulSubmissionsStatus
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.#ctor(Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.SubmissionEnum,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus"/> class.
            </summary>
            <param name="submission">submission (required).</param>
            <param name="description">description (required).</param>
            <param name="status">status (required).</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.Equals(Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus)">
            <summary>
            Returns true if SuccessfulSubmissionsStatus instances are equal
            </summary>
            <param name="input">Instance of SuccessfulSubmissionsStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.Submission">
            <summary>
            Gets or Sets Submission
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.SubmissionEnum">
            <summary>
            Defines Submission
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.SubmissionEnum.CORRECT">
            <summary>
            Enum CORRECT for value: CORRECT
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.SubmissionEnum.WRONG">
            <summary>
            Enum WRONG for value: WRONG
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.SubmissionEnum.INDETERMINATE">
            <summary>
            Enum INDETERMINATE for value: INDETERMINATE
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.SuccessfulSubmissionsStatus.SubmissionEnum.UNDECIDABLE">
            <summary>
            Enum UNDECIDABLE for value: UNDECIDABLE
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.SuccessStatus">
            <summary>
            SuccessStatus
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.SuccessStatus"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessStatus.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.SuccessStatus"/> class.
            </summary>
            <param name="description">description (required).</param>
            <param name="status">status (required).</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessStatus.Equals(Org.Vitrivr.DresApi.Model.SuccessStatus)">
            <summary>
            Returns true if SuccessStatus instances are equal
            </summary>
            <param name="input">Instance of SuccessStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.SuccessStatus.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.SuccessStatus.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.SuccessStatus.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.UserDetails">
            <summary>
            UserDetails
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.UserDetails"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserDetails.#ctor(System.String,System.String,Org.Vitrivr.DresApi.Model.UserDetails.RoleEnum,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.UserDetails"/> class.
            </summary>
            <param name="id">id (required).</param>
            <param name="username">username (required).</param>
            <param name="role">role (required).</param>
            <param name="sessionId">sessionId.</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserDetails.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserDetails.Equals(Org.Vitrivr.DresApi.Model.UserDetails)">
            <summary>
            Returns true if UserDetails instances are equal
            </summary>
            <param name="input">Instance of UserDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserDetails.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.UserDetails.Role">
            <summary>
            Gets or Sets Role
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.UserDetails.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.UserDetails.Username">
            <summary>
            Gets or Sets Username
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.UserDetails.SessionId">
            <summary>
            Gets or Sets SessionId
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.UserDetails.RoleEnum">
            <summary>
            Defines Role
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.UserDetails.RoleEnum.ADMIN">
            <summary>
            Enum ADMIN for value: ADMIN
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.UserDetails.RoleEnum.JUDGE">
            <summary>
            Enum JUDGE for value: JUDGE
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.UserDetails.RoleEnum.VIEWER">
            <summary>
            Enum VIEWER for value: VIEWER
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.UserDetails.RoleEnum.PARTICIPANT">
            <summary>
            Enum PARTICIPANT for value: PARTICIPANT
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.UserRequest">
            <summary>
            UserRequest
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.UserRequest"/> class.
            </summary>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserRequest.#ctor(System.String,System.String,System.Nullable{Org.Vitrivr.DresApi.Model.UserRequest.RoleEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Vitrivr.DresApi.Model.UserRequest"/> class.
            </summary>
            <param name="username">username (required).</param>
            <param name="password">password.</param>
            <param name="role">role.</param>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserRequest.Equals(Org.Vitrivr.DresApi.Model.UserRequest)">
            <summary>
            Returns true if UserRequest instances are equal
            </summary>
            <param name="input">Instance of UserRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Org.Vitrivr.DresApi.Model.UserRequest.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.UserRequest.Role">
            <summary>
            Gets or Sets Role
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.UserRequest.Username">
            <summary>
            Gets or Sets Username
            </summary>
        </member>
        <member name="P:Org.Vitrivr.DresApi.Model.UserRequest.Password">
            <summary>
            Gets or Sets Password
            </summary>
        </member>
        <member name="T:Org.Vitrivr.DresApi.Model.UserRequest.RoleEnum">
            <summary>
            Defines Role
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.UserRequest.RoleEnum.ADMIN">
            <summary>
            Enum ADMIN for value: ADMIN
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.UserRequest.RoleEnum.JUDGE">
            <summary>
            Enum JUDGE for value: JUDGE
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.UserRequest.RoleEnum.VIEWER">
            <summary>
            Enum VIEWER for value: VIEWER
            </summary>
        </member>
        <member name="F:Org.Vitrivr.DresApi.Model.UserRequest.RoleEnum.PARTICIPANT">
            <summary>
            Enum PARTICIPANT for value: PARTICIPANT
            </summary>
        </member>
    </members>
</doc>
